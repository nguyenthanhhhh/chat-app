<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="/socket.io/socket.io.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/qs/6.11.1/qs.min.js"
        integrity="sha512-5Zv/hNtOKSkeScnIYOqGjng82gQSHsCoyqq9TgrJLgYa032cUYWH4kF1ayS8Gz1Jfge7e8MaBF6AeEvoQ92v8w=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js"></script>

    
</head>

<body>

</body>

</html>







<div id="block-chat" class="main-content-page">
    <div class="taskbar">
        <img class="js-my-avatar" src="{{userNameFInstance.avatar}}" alt="">
        
        <button class="js-icon-taskbar-chat icon-taskbar select" onclick="openTaskbarChat()">
            <i class="ti-comment-alt "></i>
        </button>
        {{!-- Btn friend --}}
        <form action="/friend/home" method="get">
         <button class="js-icon-taskbar-list icon-taskbar" onclick="openTaskbarContact()">
            <i class="ti-user"></i>
         </button>

        </form>
        {{!--Btn loggout  --}}
        <form class="form-inline my-2 my-lg-0" action="/user/logout">
            <button class="btn-logout" type="submit"><i class="ti-shift-left"> </i></button>
        </form>
        <div class="modal-myprofile js-modal-myprofile">
            <div class="block-profile my-profile js-my-profile">
                <div class="header-profile">
                    <h5>Thông tin tài khoản</h5>
                </div>
                <div class="block-my-pro">

                <div class="profile-avatar">
                    <img class="my-avatar" src="{{userNameFInstance.avatar}}" alt="">
                    
                </div>
                </div>
                <div class="profile-name">
                    <h5>{{userNameFInstance.fullName}}</h5>
                </div>
                <h6 class="header-info">Thông tin cá nhân</h6>
                <div class="profile-infomation">
                    <div class="name-info">
                        <span>
                            Tài khoản
                        </span>
                        <span>
                            Email
                        </span>
                        <span>
                            Giới tính
                        </span>
                        <span>
                            Ngày sinh
                        </span>
                    </div>
                    <div class="infomation">
                        <span>
                            {{userNameFInstance.userName}}
                        </span>
                        <span>
                            {{userNameFInstance.email}}
                        </span>
                        <span>
                            {{userNameFInstance.sex}}
                        </span>
                        <span>
                            {{userNameFInstance.birthday}}
                        </span>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div id="list-user-block" class="js-list-user-block block-list-user open">
        <div class="header-list-user">
            <input class="search-friend" type="text" placeholder="Tìm Kiếm">
            <button class="btn-add-form js-btn-add-form"><i class="ti-plus"></i></button>
        </div>
        {{#each allFriend}}
        {{#if this.isSelect}}
        <form action="/user/inbox/{{this.userNameFriend}}" method="post">
            <input type="hidden" name="userNameF" value="{{this.userName}}">
            <input type="hidden" name="userNameT" value="{{this.userNameFriend}}">
            <button type="submit" class="block-user-item friend-item css-select-friend">
            <div class="avatar-friend-item">
                <img src="{{this.userNameFriendAvt}}" alt="">
            </div>
                
                <div>
                    <p>{{this.userNameFriendFullName}}</p>
                    <p>{{this.latestMessage}}</p>
                </div>
            </button>
        </form>
        {{else}}

        <form action="/user/inbox/{{this.userNameFriend}}" method="post">
            <input type="hidden" name="userNameF" value="{{this.userName}}">
            <input type="hidden" name="userNameT" value="{{this.userNameFriend}}">
            <button type="submit" class="block-user-item friend-item">
                <div class="avatar-friend-item">
                    <img src="{{this.userNameFriendAvt}}" alt="">
                </div>
        
                <div>
                    <p>{{this.userNameFriendFullName}}</p>
                    <p>{{this.latestMessage}}</p>
                </div>
            </button>
        </form>

        {{/if}}
        {{/each}}

    </div>

    {{#if userNameT}}
    <div class="full-message-block js-message-block open">
        <div class="username-inbox">
            <div class="block-username js-block-username" onclick="closeProfile()">
                <div class="avatar-friend-item">
                    <img src="{{userNameTInstance.avatar}}" alt="">
                </div>
                <div>
                    <h4>{{userNameT_fullName}}</h4>
                    {{#if status}}
                    <label class="active-status-on" for="">Đang hoạt động</label>
                    {{else}}
                    <label class="active-status-off" for="">Ngoại tuyến</label>
                    {{/if}}
                </div>

            </div>
            <div class="block-call js-block-call">
                <button onclick="notication()">
                    <i class="ti-search"></i>
                </button>
                <button onclick="notication()">
                    <i class="ti-headphone-alt"></i>
                </button>
                <button onclick="notication()">
                    <i class="ti-video-camera"></i>
                </button>

            </div>
        </div>
        <div id="message-block">
            

            {{#each allMessage}}
            {{!-- đây là bên gửi --}}
            {{#if this.isSend}}
            {{#if this.isLocate}}
            <div class="message-item" id="message-item">
            
                <div class="message__row1 message__row2">
                    <a class="message__content message__content2" href="{{this.message}}" target="_blank">
                        Vị trí của tôi
                    </a>
                    <p class="message__date message__date2">{{this.createdAt}}</p>
            
                </div>
            
            </div>

            {{else}}
            <div class="message-item" id="message-item">

                <div class="message__row1 message__row2">
                    
                    <p class="message__content message__content2">
                        {{this.message}}
                    </p>
                    <p class="message__date message__date2">{{this.createdAt}}</p>

                </div>

            </div>
            {{/if}}
            {{!-- đây là bên nhận tin nhắn --}}
            {{else}}

            {{#if this.isLocate}}
            <div class="message-item" id="message-item">
                <div class="block-message-content">
                    <div class="avatar-friend-inbox">
                         <img class="avt-friend" src="{{../userNameTInstance.avatar}}" alt="1">
                    </div>
                    
                    <div class="message__row1">
                        <a class="message__content" href="{{this.message}}" target="_blank">
                            Vị trí của tôi
                        </a>
                        <p class="message__date">{{this.createdAt}}</p>
                
                    </div>
                    
                </div>
            
            </div>
            
            {{else}}

            <div class="message-item" id="message-item">
                <div class="block-message-content">
                    <img class="avatar-friend-inbox" src="{{../userNameTInstance.avatar}}" alt="2">
                    
                    <div class="message__row1">
                        <p class="message__content">
                            {{this.message}}
                        </p>
                        <p class="message__date">{{this.createdAt}}</p>
                    </div>

                </div>
            
            </div>
            {{/if}}


            {{/if}}
            {{/each}}

        </div>
        <div id="form-message-block">
            <form id="form-message">
                <div class="control-row">
                    <input type="text" id="input-message" placeholder="Nhập tin nhắn">
                    <button class="btn-send-mess" type="submit"><i class="ti-control-forward"></i></button>
                    <button class="btn-send-mess" type="button" id="btn-share-location"><i
                            class="ti-location-pin"></i></button>
                </div>
            </form>

        </div>
    </div>
    {{else}}
    <div class="block-chat full-message-block open">
        <div class="message-block-default">
            <h4>
                Hãy chọn một đoạn chat hoặc bắt đầu cuộc trò chuyện mới
            </h4>
        </div>

    </div>

    {{/if}}


    <div class="block-profile block-profile-chat js-block-profile">
        <div class="header-profile">
            <h5>Thông tin tài khoản</h5>
        </div>
        <div class="profile-avatar">
            <div class="avatar-friend-item">
                <img src="{{userNameTInstance.avatar}}" alt="">
            </div>
        </div>
        <div class="profile-name solid8px">
            <h5>{{userNameTInstance.fullName}}</h5>
        </div>
        <h6 class="header-info">Thông tin cá nhân</h6>
        <div class="profile-infomation">
            <div class="name-info">
                <span>
                    Tài khoản
                </span>
                <span>
                    Giới tính
                </span>
                <span>
                    Ngày sinh
                </span>
            </div>
            <div class="infomation">
                <span>
                    {{userNameTInstance.userName}}
                </span>
                <span>
                    {{userNameTInstance.sex}}
                </span>
                <span>
                    {{userNameTInstance.birthday}}
                </span>
            </div>

        </div>
    </div>
    


<div class="js-modal-add-friend modal-add-friend">
    <form class="form-add-friend js-form-add-friend" action = "user/addFriend" method = "post">
                    
        <input type="text" name="userNameFriend" class="input-username-add" value="" placeholder="Tài khoản">
        <input type="hidden" name="userName" value="{{userChat.userName}}">
        <div>
            <div>
                <label for="">Họ tên:</label>
                <p>Chu Bá Hiếu</p>

            </div>
            <div>
                <label for="">Giới tính:</label>
                <p>Nam</p>
            </div>
            <div>
                <label for="">Ngày sinh:</label>
                    <p>17/07/2002</p>
            </div>
                <button type="sumit">
                     Thêm bạn bè
                </button>
        </div>
    </form>
</div>

</div>






{{!-- PHẦN NÀY LÀ BACKEND --}}
<script>
    const userNameFNhan = '{{userNameF}}'
    const userNameF = '{{ userChat.userName }}';
    const fullName = '{{userChat.fullName}}'
    const room = "defaultRoom"
    const userNameT = '{{userNameT}}'
    const userNameT_FullName = '{{userNameT_fullName}}'

    const renderMessageSend = (data) => {
        const html = `

        <div class="message-item" id="message-item">
                
                <div class="message__row1 message__row2">
                    <p class="message__content message__content2">
                        ${data.message}
                    </p>
                    <p class="message__date">${data.createdAt}</p>

                </div>
                
        </div>

    `;
        return html;
    };

    const renderMessageReceive = (data) => {
            const html = `

        <div class="message-item" id="message-item">
                
                <div class="message__row1 message__row2">
                    <p class="message__content">
                        ${data.message}
                    </p>
                    <p class="message__date">${data.createdAt}</p>

                </div>
                
        </div>

    `;
            return html;
        };

    const renderMessageLocationSend = (data) => {
            const html = `
        <div class="message-item" id="message-item">
                
                <div class="message__row1 message__row2">
                    <a class="message__content message__content2" href="${data.message}" target = "_blank" >
                        Vị trí của tôi
                    </a>
                    <p class="message__date">${data.createdAt}</p>

                </div>
                
        </div>

    `;
            return html;
        };

    const renderMessageLocationReceive = (data) => {
                const html = `

        <div class="message-item" id="message-item">
                
                <div class="message__row1 message__row2">
                    <a class="message__content" href="${data.message}" target = "_blank" >
                        Vị trí của tôi
                    </a>
                    <p class="message__date">${data.createdAt}</p>

                </div>
                
        </div>

    `;
                return html;
            };

    const socket = io();
    const token = document.cookie;
    const userInfoStr = decodeURIComponent(token.split(";")[1].split("=")[1]);
    const userInfo = JSON.parse(userInfoStr.replace("j:", ""));
    const { userName, email } = userInfo;



    // xử lý query string (thư viện)
    const queryString = location.search;
    const params = Qs.parse(queryString, {
        ignoreQueryPrefix: true,
    });

    const formMessage = document.getElementById("form-message");
    //join room
    socket.emit("client join room", { userNameF, room });
    if (formMessage) {

        //gửi tin nhắn lên server
        formMessage.addEventListener("submit", (e) => {
            e.preventDefault();
            
            const inputMessage = document.getElementById("input-message");

            //kiểm tra trạng thái tin nhắn
            const acknowledgements = () => {
            };

            //gửi dữ tin nhắn lên server
            const message = inputMessage.value;
            if (message.trim().length !== 0) {
                socket.emit(
                    "send-message-to-server",
                    { userNameF: userNameFNhan, userNameT: userNameT, message: inputMessage.value, fullName, userNameT_FullName, userChat: userNameF },

                );
            }

            //xử lý theo 2 luồng, render tin nhắn ng gửi tại đây, và ng nhận render bên dưới


            inputMessage.value = "";
        });

        const messages = document.getElementById("messages");
        //Xử lý tin nhắn chat
        socket.on("server-send-message-to-client", (data) => { 
            if (data.message.userNameF === userNameF) {
                /*
                let html = renderMessageSend(data.message);
                document.getElementById("message-block").insertAdjacentHTML('beforeend', html);
                */
                // Tạo phần tử cha (div.message-item)
                var messageItem = document.createElement('div');
                messageItem.classList.add('message-item');
                messageItem.id = 'message-item';

                

                // Tạo phần tử con (div.message__row1)
                var messageRow1 = document.createElement('div');
                messageRow1.classList.add('message__row1');
                messageRow1.classList.add('message__row2');

                // Tạo phần tử con (a.message__content)
                var messageContent = document.createElement('p');
                messageContent.classList.add('message__content');
                messageContent.classList.add('message__content2');

                // Tạo phần tử con (p.message__date)
                var messageDate = document.createElement('p');
                messageDate.classList.add('message__date');
                messageDate.textContent = '{{this.createdAt}}';

                // Thêm a.message__content và p.message__date vào div.message__row1
                messageRow1.appendChild(messageContent);
                messageRow1.appendChild(messageDate);

                // Thêm div.avatar-friend-inbox và div.message__row1 vào div.block-message-content
             
                messageItem.appendChild(messageRow1);                        
                
                
                messageContent.textContent = data.message.message;
                var messageContainer = document.getElementById('message-block');
                messageContainer.appendChild(messageItem);
                
            } else {
                /*
                let html = renderMessageReceive(data.message);
                document.getElementById("message-block").insertAdjacentHTML('beforeend', html);
                */

                // Tạo phần tử cha (div.message-item)
                var messageItem = document.createElement('div');
                messageItem.classList.add('message-item');
                messageItem.id = 'message-item';

                // Tạo phần tử con (div.block-message-content)
                var blockMessageContent = document.createElement('div');
                blockMessageContent.classList.add('block-message-content');

                // Tạo phần tử con (div.avatar-friend-inbox)
                var avatarFriendInbox = document.createElement('div');
                avatarFriendInbox.classList.add('avatar-friend-inbox');

                // Tạo phần tử con (img.avt-friend)
                var avatarFriend = document.createElement('img');
                avatarFriend.classList.add('avt-friend');
                avatarFriend.src = '{{../userNameTInstance.avatar}}';
                avatarFriend.alt = '1';

                // Thêm img.avt-friend vào div.avatar-friend-inbox
                avatarFriendInbox.appendChild(avatarFriend);

                // Tạo phần tử con (div.message__row1)
                var messageRow1 = document.createElement('div');
                messageRow1.classList.add('message__row1');

                // Tạo phần tử con (a.message__content)
                var messageContent = document.createElement('p');
                messageContent.classList.add('message__content');

                // Tạo phần tử con (p.message__date)
                var messageDate = document.createElement('p');
                messageDate.classList.add('message__date');
                messageDate.textContent = '{{this.createdAt}}';

                // Thêm a.message__content và p.message__date vào div.message__row1
                messageRow1.appendChild(messageContent);
                messageRow1.appendChild(messageDate);

                // Thêm div.avatar-friend-inbox và div.message__row1 vào div.block-message-content
             
                blockMessageContent.appendChild(avatarFriendInbox);
                blockMessageContent.appendChild(messageRow1);   
                messageItem.appendChild(blockMessageContent);                  
                
                messageContent.textContent = data.message.message;
                var messageContainer = document.getElementById('message-block');
                messageContainer.appendChild(messageItem);
                
            }
              
        });

        //Gửi vĩ độ, kink độ lên server
        const btnShareLocation = document.getElementById("btn-share-location");
        btnShareLocation.addEventListener("click", (e) => {
            if (!navigator.geolocation) return alert("Trình duyệt của bạn không hỗ trợ");
            navigator.geolocation.getCurrentPosition((position) => {
                console.log(position);
                const { latitude, longitude } = position.coords;
                console.log(latitude, longitude);
                socket.emit("share-location", { userNameF: userNameFNhan, userNameT: userNameT, latitude, longitude, fullName, userNameT_FullName, userChat: userNameF });


            });
        });

        //xử lý share location:
        socket.on("server-send-location-to-client", (data) => {
            // const chatItem2 = document.createElement("li");
            if (data.message.userNameF === userNameF) {
                let html = renderMessageLocationSend(data.message);
                document.getElementById("message-block").insertAdjacentHTML('beforeend', html);
            }
            else {
                let html = renderMessageLocationReceive(data.message);
                document.getElementById("message-block").insertAdjacentHTML('beforeend', html);
            }
           
        });

    }


</script>


{{!-- hieu bl --}}
<script>
    const btnadd = document.querySelectorAll('.js-btn-add-form')
    const modalAddFriend = document.querySelector('.js-modal-add-friend')
    const formAddFriend = document.querySelector('.js-form-add-friend')
    function showFormAddFriend(){
        modalAddFriend.classList.add('open')
    }
    function closeModalAddFriend(){
        modalAddFriend.classList.remove('open')
    }
    
    for(const btn of btnadd){
        btn.addEventListener('click',showFormAddFriend)
    }
    
    modalAddFriend.addEventListener('click',closeModalAddFriend)

    formAddFriend.addEventListener('click', function(even){
        even.stopPropagation()
    })
</script>

<script>
    const btnshow = document.querySelector('.js-my-avatar')
    const modalpro = document.querySelector('.js-modal-myprofile')
    const mypro = document.querySelector('.js-my-profile')
    function showMyProfile(){
        modalpro.classList.add('open')
    }
    function closeMyProfile(){
        modalpro.classList.remove('open')
    }
    btnshow.addEventListener('click',showMyProfile)

    modalpro.addEventListener('click',closeMyProfile)

    mypro.addEventListener('click', function(even){
        even.stopPropagation()
    })
</script>

<script>
    function notication(){
        alert("Chức năng đang phát triển")
    }
</script>


<script>
    const message = document.querySelector('.js-message-block')
    const profile = document.querySelector('.js-block-profile')
    function closeProfile(){
        if (profile.classList.contains("open")){
            profile.classList.remove('open')
            message.classList.remove('narrow')
        }
        else{
            profile.classList.add('open')
            message.classList.add('narrow')
        }
    }
</script>

