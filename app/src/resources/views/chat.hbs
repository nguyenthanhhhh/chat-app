<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="/socket.io/socket.io.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/qs/6.11.1/qs.min.js"
        integrity="sha512-5Zv/hNtOKSkeScnIYOqGjng82gQSHsCoyqq9TgrJLgYa032cUYWH4kF1ayS8Gz1Jfge7e8MaBF6AeEvoQ92v8w=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js"></script>

    <nav class="navbar navbar-expand-lg navbar-light bg-light header-w">
        <a class="navbar-brand" href="/">Trang chủ</a>


        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item active">
                    <a class="nav-link" href="#">Phòng <span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Cài đặt</a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button"
                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Tùy chọn
                    </a>
                    {{!-- <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                        <a class="dropdown-item" href="#">Action</a>
                        <a class="dropdown-item" href="#">Another action</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="#">Something else here</a>
                    </div> --}}
                </li>

            </ul>
            {{!-- <form class="form-inline my-2 my-lg-0" action="/user/logout">
                <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Đăng xuất</button>
            </form> --}}
        </div>
        <form class="form-inline my-2 my-lg-0" action="/user/logout">
            <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Đăng xuất</button>
        </form>
    </nav>
</head>

<body>

</body>

</html>







<div id="block-chat">
    <div id="list-user-block">
        <input class="search-friend" type="text" placeholder="Tìm Kiếm">
        <button></button>
        {{#each allFriend}}
        <form action="/user/inbox/{{this.userNameFriend}}" method="post">
            <input type="hidden" name="userNameF" value="{{this.userName}}">
            <input type="hidden" name="userNameT" value="{{this.userNameFriend}}">
            <div>
            <button class="friend-item" type="submit">{{this.userNameFriendFullName}}</button>
            <p>{{this.latestMessage}}</p>
            </div>
        </form>
        {{/each}}

    </div>

    {{#if userNameT}}
    <div class="full-message-block">
        <div class="username-inbox">
            <div class="block-username">
                <h4>{{userNameT_fullName}}</h4>
                {{#if status}}
                <label class="active-status" for="">Đang hoạt động</label>
                {{else}}
                <label class="active-status" for="">Ngoại tuyến</label>
                {{/if}}

            </div>
            <div class="block-call">
                <button>
                    <i class="ti-search"></i>
                </button>
                <button>
                    <i class="ti-headphone-alt"></i>
                </button>
                <button>
                    <i class="ti-video-camera"></i>
                </button>

            </div>
        </div>
        <div id="message-block">

            {{#each allMessage}}
            {{!-- đây là bên gửi --}}
            {{#if this.isSend}}
            {{#if this.isLocate}}
            <div class="message-item" id="message-item">
            
                <div class="message__row2">
                    <a class="message__content" href="{{this.message}}" target="_blank">
                        Vị trí của tôi
                    </a>
                    <p class="message__date">{{this.createdAt}}</p>
            
                </div>
            
            </div>

            {{else}}
            <div class="message-item" id="message-item">

                <div class="message__row2">
                    <p class="message__content2">
                        {{this.message}}
                    </p>
                    <p class="message__date">{{this.createdAt}}</p>

                </div>

            </div>
            {{/if}}
            {{!-- đây là bên nhận tin nhắn --}}
            {{else}}

            {{#if this.isLocate}}
            <div class="message-item" id="message-item">
            
                <div class="message__row2">
                    <a class="message__content" href="{{this.message}}" target="_blank">
                        Vị trí của tôi
                    </a>
                    <p class="message__date">{{this.createdAt}}</p>
            
                </div>
            
            </div>
            
            {{else}}
            <div class="message-item" id="message-item">
            
                <div class="message__row2">
                    <p class="message__content">
                        {{this.message}}
                    </p>
                    <p class="message__date">{{this.createdAt}}</p>
            
                </div>
            
            </div>
            {{/if}}


            {{/if}}
            {{/each}}

        </div>
        <div id="form-message-block">
            <form id="form-message">
                <div class="control-row">
                    <input type="text" id="input-message" placeholder="Nhập tin nhắn">
                    <button class="btn-send-mess" type="submit"><i class="ti-control-forward"></i></button>
                    <button class="btn-send-mess" type="button" id="btn-share-location"><i
                            class="ti-location-pin"></i></button>
                </div>
            </form>

        </div>
    </div>
    {{else}}
    <div class="full-message-block">
    <h3>Kiếm ảnh ở đây đi hiếu bl, làm mấy cái sl trôi trôi ý nhé.
        làm profile với form kết bạn đi, tối thứ 7 xong nhé
    </h3>

    </div>

    {{/if}}


</div>






{{!-- PHẦN NÀY LÀ BACKEND --}}
<script>
    const userNameF = '{{ userChat.userName }}';
    const fullName = '{{userChat.fullName}}'
    const room = "defaultRoom"
    const userNameT = '{{userNameT}}'
    const userNameT_FullName = '{{userNameT_fullName}}'

    const renderMessage = (message) => {
        const html = `

        <div class="message-item" id="message-item">
                
                <div class="message__row2">
                    <p class="message__content">
                        ${message.message.message}
                    </p>
                    <p class="message__date">${message.message.createdAt}</p>

                </div>
                
        </div>

    `;
        return html;
    };

    const renderMessageLocation = (message) => {
            const html = `

        <div class="message-item" id="message-item">
                
                <div class="message__row2">
                    <a class="message__content" href="${message.message.message}" target = "_blank" >
                        Vị trí của tôi
                    </a>
                    <p class="message__date">${message.message.createdAt}</p>

                </div>
                
        </div>

    `;
            return html;
        };

    const socket = io();
    const token = document.cookie;
    const userInfoStr = decodeURIComponent(token.split(";")[1].split("=")[1]);
    const userInfo = JSON.parse(userInfoStr.replace("j:", ""));
    const { userName, email } = userInfo;



    // xử lý query string (thư viện)
    const queryString = location.search;
    const params = Qs.parse(queryString, {
        ignoreQueryPrefix: true,
    });

    const formMessage = document.getElementById("form-message");
    //join room
    socket.emit("client join room", { userNameF, room });
    if (formMessage) {

        //gửi tin nhắn lên server
        formMessage.addEventListener("submit", (e) => {
            e.preventDefault();
            
            const inputMessage = document.getElementById("input-message");

            //kiểm tra trạng thái tin nhắn
            const acknowledgements = () => {
                // console.log("Gửi tin nhắn thành công");s
            };

            //gửi dữ tin nhắn lên server
            const message = inputMessage.value;
            if (message.trim().length !== 0) {
                socket.emit(
                    "send-message-to-server",
                    { userNameF: name, userNameT: userNameT, message: inputMessage.value },

                );
            console.log("gui tin nhan len server")
            }

            axios({
                method: 'post',
                url: '/user/createMessage',
                data: {
                    userNameF,
                    userNameT,
                    fullName,
                    userNameT_FullName,
                    message: inputMessage.value
                }
            });

            inputMessage.value = "";
        });

        const messages = document.getElementById("messages");

        //Xử lý tin nhắn chat
        socket.on("server-send-message-to-client", (data) => {
            let html = renderMessage(data);
            document.getElementById("message-block").insertAdjacentHTML('beforeend', html);
        });

        //Gửi vĩ độ, kink độ lên server
        const btnShareLocation = document.getElementById("btn-share-location");
        btnShareLocation.addEventListener("click", (e) => {
            if (!navigator.geolocation) return alert("Trình duyệt của bạn không hỗ trợ");
            navigator.geolocation.getCurrentPosition((position) => {
                console.log(position);
                const { latitude, longitude } = position.coords;
                console.log(latitude, longitude);
                socket.emit("share-location", { userNameF: name, userNameT: userNameT, latitude, longitude });
            });
        });

        //xử lý share location:
        socket.on("server-send-location-to-client", (data) => {
            // const chatItem2 = document.createElement("li");
            let html = renderMessageLocation(data)
            axios({
                method: 'post',
                url: '/user/createMessage',
                data: {
                    userNameF,
                    userNameT,
                    fullName,
                    userNameT_FullName, 
                    message: data.message.message
                }
            });
            document.getElementById("message-block").insertAdjacentHTML('beforeend', html);
        });

    }


</script>